{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Link from 'next/link';\nimport Campaign from \"../../ethereum/campaign\";\nimport { Card, Grid, Button } from \"semantic-ui-react\"; //Props is passed from Index.js that Link with query\n//campaign is the address of that campaign\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          manager = _this$props.manager,\n          minimumContribution = _this$props.minimumContribution,\n          requestsCount = _this$props.requestsCount,\n          approversCount = _this$props.approversCount;\n      var items = [{\n        header: manager,\n        meta: \"Address of Manager\",\n        description: \"The manager created this campaign and can create requests to withdraw money\",\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }, {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description: \"You must contribute at least this much wei to become an approver\"\n      }, {\n        header: requestsCount,\n        meta: \"Number of Requests\",\n        description: \"A request tries to withdraw money from the contract. Requests must be approved by approvers\"\n      }, {\n        header: approversCount,\n        meta: \"Number of Approvers\",\n        description: \"Number of people who have already donated to this campaign\"\n      }, {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Campaign Balance (ether)\",\n        description: \"The balance is how much money this campaign has left to spend.\"\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Show\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(context.query.campaign); //this is indeed an object returned, instead of an array !!!\n\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  address: context.query.campaign,\n                  minimumContribution: summary[0],\n                  balance: summary[1],\n                  requestsCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/pages/campaigns/show.js"],"names":["React","Component","Layout","Link","Campaign","Card","Grid","Button","CampaignShow","props","balance","manager","minimumContribution","requestsCount","approversCount","items","header","meta","description","style","overflowWrap","web3","utils","fromWei","context","campaign","query","methods","getSummary","call","summary","address"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC,C,CACA;AACA;;IACMC,Y;;;;;;;;;;;;;kCAgBY;AAAA,wBAON,KAAKC,KAPC;AAAA,UAERC,OAFQ,eAERA,OAFQ;AAAA,UAGRC,OAHQ,eAGRA,OAHQ;AAAA,UAIRC,mBAJQ,eAIRA,mBAJQ;AAAA,UAKRC,aALQ,eAKRA,aALQ;AAAA,UAMRC,cANQ,eAMRA,cANQ;AASV,UAAMC,KAAK,GAAG,CACZ;AACEC,QAAAA,MAAM,EAAEL,OADV;AAEEM,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,WAAW,EACT,6EAJJ;AAKEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AALT,OADY,EAQZ;AACEJ,QAAAA,MAAM,EAAEJ,mBADV;AAEEK,QAAAA,IAAI,EAAE,4BAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OARY,EAcZ;AACEF,QAAAA,MAAM,EAAEH,aADV;AAEEI,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OAdY,EAoBZ;AACEF,QAAAA,MAAM,EAAEF,cADV;AAEEG,QAAAA,IAAI,EAAE,qBAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OApBY,EA0BZ;AACEF,QAAAA,MAAM,EAAEK,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBb,OAAnB,EAA4B,OAA5B,CADV;AAEEO,QAAAA,IAAI,EAAE,0BAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OA1BY,CAAd;AAkCA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEH;AAAnB,QAAP;AACD;;;6BAEK;AACJ,aACI,MAAC,MAAD,QACI,yBADJ,CADJ;AAKH;;;;uGAnE4BS,O;;;;;;AACnBC,gBAAAA,Q,GAAWrB,QAAQ,CAACoB,OAAO,CAACE,KAAR,CAAcD,QAAf,C,EACzB;;;uBACsBA,QAAQ,CAACE,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,E;;;AAAhBC,gBAAAA,O;iDAEC;AACHC,kBAAAA,OAAO,EAAEP,OAAO,CAACE,KAAR,CAAcD,QADpB;AAEHb,kBAAAA,mBAAmB,EAAEkB,OAAO,CAAC,CAAD,CAFzB;AAGHpB,kBAAAA,OAAO,EAAEoB,OAAO,CAAC,CAAD,CAHb;AAIHjB,kBAAAA,aAAa,EAAEiB,OAAO,CAAC,CAAD,CAJnB;AAKHhB,kBAAAA,cAAc,EAAEgB,OAAO,CAAC,CAAD,CALpB;AAMHnB,kBAAAA,OAAO,EAAEmB,OAAO,CAAC,CAAD;AANb,iB;;;;;;;;;;;;;;;;;;;EANY7B,S;;AAuE3B,eAAeO,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Link from 'next/link';\nimport Campaign from \"../../ethereum/campaign\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\n//Props is passed from Index.js that Link with query\n//campaign is the address of that campaign\nclass CampaignShow extends Component {\n    static async getInitialProps(context) {\n        const campaign = Campaign(context.query.campaign);\n        //this is indeed an object returned, instead of an array !!!\n        const summary = await campaign.methods.getSummary().call();\n    \n        return {\n            address: context.query.campaign,\n            minimumContribution: summary[0],\n            balance: summary[1],\n            requestsCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4]\n        };\n    }\n\n    renderCards() {\n        const {\n          balance,\n          manager,\n          minimumContribution,\n          requestsCount,\n          approversCount\n        } = this.props;\n    \n        const items = [\n          {\n            header: manager,\n            meta: \"Address of Manager\",\n            description:\n              \"The manager created this campaign and can create requests to withdraw money\",\n            style: { overflowWrap: \"break-word\" }\n          },\n          {\n            header: minimumContribution,\n            meta: \"Minimum Contribution (wei)\",\n            description:\n              \"You must contribute at least this much wei to become an approver\"\n          },\n          {\n            header: requestsCount,\n            meta: \"Number of Requests\",\n            description:\n              \"A request tries to withdraw money from the contract. Requests must be approved by approvers\"\n          },\n          {\n            header: approversCount,\n            meta: \"Number of Approvers\",\n            description:\n              \"Number of people who have already donated to this campaign\"\n          },\n          {\n            header: web3.utils.fromWei(balance, \"ether\"),\n            meta: \"Campaign Balance (ether)\",\n            description:\n              \"The balance is how much money this campaign has left to spend.\"\n          }\n        ];\n    \n        return <Card.Group items={items} />;\n      }\n\n    render(){\n        return( \n            <Layout>\n                <h3>Show</h3>\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}