{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\n\nvar ContributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  var _super = _createSuper(ContributeForm);\n\n  function ContributeForm() {\n    var _this;\n\n    _classCallCheck(this, ContributeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: '',\n      //input is string\n      errorMessage: '',\n      loading: false //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n\n    });\n\n    return _this;\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n      // <Form.Field>\n      //   <label>Amount to Contribute</label>\n      //   <Input\n      //     value={this.state.value}\n      //     onChange={event => this.setState({ value: event.target.value })}\n      //     label=\"ether\"\n      //     labelPosition=\"right\"\n      //   />\n      // </Form.Field>\n      // <Message error header=\"Oops!\" content={this.state.errorMessage} />\n      return __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount\"), __jsx(Input, {\n        value: this.state.value,\n        label: \"ether\",\n        labelPosition: \"right\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            value: event.target.value\n          });\n        }\n      })), __jsx(Button, {\n        primary: true\n      }, \"Contribute!\"));\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","ContributeForm","value","errorMessage","loading","onSubmit","state","event","setState","target"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;;IAEMC,c;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAC,EADA;AACI;AACVC,MAAAA,YAAY,EAAC,EAFP;AAGNC,MAAAA,OAAO,EAAE,KAHH,CAGU;;AAHV,K;;;;;;;6BAKE;AAAA;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,aACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC;AAArB,SACE,MAAC,IAAD,CAAM,KAAN,QACE,8BADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWJ,KADpB;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,aAAa,EAAC,OAHhB;AAIE,QAAA,QAAQ,EAAE,kBAAAK,KAAK;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAACN,YAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaP;AAArB,WAAd,CAAJ;AAAA;AAJjB,QAFF,CADF,EAUE,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,uBAVF,CADF;AAgBH;;;;EAnCwBN,S;;AAsC7B,eAAeK,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\n\nclass ContributeForm extends Component {\n  state = {\n    value:'', //input is string\n    errorMessage:'',\n    loading: false  //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n}\n    render(){\n        // <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n        // <Form.Field>\n        //   <label>Amount to Contribute</label>\n        //   <Input\n        //     value={this.state.value}\n        //     onChange={event => this.setState({ value: event.target.value })}\n        //     label=\"ether\"\n        //     labelPosition=\"right\"\n        //   />\n        // </Form.Field>\n\n        // <Message error header=\"Oops!\" content={this.state.errorMessage} />\n        return(\n          <Form onSubmit={this.onSubmit}>\n            <Form.Field>\n              <label>Amount</label>\n              <Input\n                value={this.state.value}\n                label=\"ether\"\n                labelPosition=\"right\"\n                onChange={event => this.setState({value: event.target.value})}\n              />\n            </Form.Field>\n            <Button primary>\n              Contribute!\n            </Button>\n        </Form>\n        );\n    }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}