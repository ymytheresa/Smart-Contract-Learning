{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      //input is string\n      errorMessage: '',\n      loading: false //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //props send from show.js <ContributeForm address=xxx>\n\n      const campaign = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, \"ether\")\n        });\n      } catch (error) {}\n\n      ;\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount\"), __jsx(Input, {\n      value: this.state.value,\n      label: \"ether\",\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    })), __jsx(Button, {\n      primary: true\n    }, \"Contribute!\"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","web3","ContributeForm","value","errorMessage","loading","event","preventDefault","campaign","props","address","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","error","render","onSubmit","setState","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNQ,MAAAA,KAAK,EAAC,EADA;AACI;AACVC,MAAAA,YAAY,EAAC,EAFP;AAGNC,MAAAA,OAAO,EAAE,KAHH,CAGU;;AAHV,KAD6B;;AAAA,sCAO1B,MAAMC,KAAN,IAAe;AACxBA,MAAAA,KAAK,CAACC,cAAN,GADwB,CAGxB;;AACA,YAAMC,QAAQ,GAAGR,QAAQ,CAAC,KAAKS,KAAL,CAAWC,OAAZ,CAAzB;;AAEA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB;AACA,cAAML,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACvCC,UAAAA,IAAI,EAACN,QAAQ,CAAC,CAAD,CAD0B;AAEvCR,UAAAA,KAAK,EAAEF,IAAI,CAACiB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWjB,KAA5B,EAAkC,OAAlC;AAFgC,SAAnC,CAAN;AAID,OAND,CAME,OAAOkB,KAAP,EAAc,CAEf;;AAAA;AAEF,KAvBoC;AAAA;;AAyBrCC,EAAAA,MAAM,GAAE;AACJ,WACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACE,MAAC,IAAD,CAAM,KAAN,QACE,8BADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWjB,KADpB;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,aAAa,EAAC,OAHhB;AAIE,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKkB,QAAL,CAAc;AAACrB,QAAAA,KAAK,EAAEG,KAAK,CAACmB,MAAN,CAAatB;AAArB,OAAd;AAJrB,MAFF,CADF,EAUE,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,qBAVF,CADF;AAgBH;;AA1CoC;;AA6CvC,eAAeD,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nclass ContributeForm extends Component {\n  state = {\n    value:'', //input is string\n    errorMessage:'',\n    loading: false  //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    //props send from show.js <ContributeForm address=xxx>\n    const campaign = Campaign(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribute().send({\n        from:accounts[0],\n        value: web3.utils.toWei(this.state.value,\"ether\")\n      });\n    } catch (error) {\n      \n    };\n\n  }\n\n  render(){\n      return(\n        <Form onSubmit={this.onSubmit}>\n          <Form.Field>\n            <label>Amount</label>\n            <Input\n              value={this.state.value}\n              label=\"ether\"\n              labelPosition=\"right\"\n              onChange={event => this.setState({value: event.target.value})}\n            />\n          </Form.Field>\n          <Button primary>\n            Contribute!\n          </Button>\n      </Form>\n      );\n  }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}