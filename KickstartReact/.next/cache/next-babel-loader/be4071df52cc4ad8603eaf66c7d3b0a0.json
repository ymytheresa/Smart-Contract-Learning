{"ast":null,"code":"var _jsxFileName = \"/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/components/RequestRow.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approveRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n    return __jsx(Row, {\n      disabled: request.complete,\n      positive: readyToFinalize && !request.complete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, id), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, request.description), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, web3.utils.fromWei(request.value, \"ether\")), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, request.recipient), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, request.approvalCount, \"/\", approversCount), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, request.complete ? null : __jsx(Button, {\n      color: \"green\",\n      basic: true,\n      onClick: this.onApprove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, \"Approve\")), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, request.complete ? null : __jsx(Button, {\n      color: \"teal\",\n      basic: true,\n      onClick: this.onFinalize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, \"Finalize\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Campaign","RequestRow","campaign","props","address","accounts","eth","getAccounts","methods","approveRequest","id","send","from","finalizeRequest","render","Row","Cell","request","approversCount","readyToFinalize","approvalCount","complete","description","utils","fromWei","value","recipient","onApprove","onFinalize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nclass RequestRow extends Component {\n    //this is not a new page, no need getInitialProps()\n    onApprove = async () => {\n        const campaign = Campaign(this.props.address);\n    \n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.approveRequest(this.props.id).send({\n          from: accounts[0]\n        });\n      };\n    \n    onFinalize = async () => {\n        const campaign = Campaign(this.props.address);\n\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.finalizeRequest(this.props.id).send({\n            from: accounts[0]\n        });\n    };\n\n\n    render() {\n        const { Row, Cell} = Table;\n        const { id, request, approversCount} = this.props;\n        const readyToFinalize = request.approvalCount > approversCount / 2;\n        return (\n            <Row\n            disabled={request.complete}\n            positive={readyToFinalize && !request.complete}\n            >\n                <Cell>{id}</Cell>\n                <Cell>{request.description}</Cell>\n                <Cell>{web3.utils.fromWei(request.value, \"ether\")}</Cell>\n                <Cell>{request.recipient}</Cell>\n                <Cell>{request.approvalCount}/{approversCount}</Cell>\n                \n                <Cell>\n                    {request.complete ? null : (\n                        <Button color=\"green\" basic onClick={this.onApprove}>\n                        Approve\n                        </Button>\n                    )}\n                </Cell>\n                <Cell>\n                    {request.complete ? null : (\n                        <Button color=\"teal\" basic onClick={this.onFinalize}>\n                        Finalize\n                        </Button>\n                    )}\n                </Cell>               \n            </Row>\n        );\n    }\n}\n\nexport default RequestRow;"]},"metadata":{},"sourceType":"module"}