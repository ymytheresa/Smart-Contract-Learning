{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\"; // import ContributeForm from \"../../components/ContributeForm\";\n\nimport Link from \"next/link\";\n\nclass CampaignShow extends Component {\n  static async getInitialProps(context) {\n    const campaign = Campaign(context.query.campaign);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: context.query.campaign,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      approversCount\n    } = this.props; // const items = [\n    //   {\n    //     header: manager,\n    //     meta: \"Address of Manager\",\n    //     description:\n    //       \"The manager created this campaign and can create requests to withdraw money\",\n    //     style: { overflowWrap: \"break-word\" }\n    //   },\n    //   {\n    //     header: minimumContribution,\n    //     meta: \"Minimum Contribution (wei)\",\n    //     description:\n    //       \"You must contribute at least this much wei to become an approver\"\n    //   },\n    //   {\n    //     header: requestsCount,\n    //     meta: \"Number of Requests\",\n    //     description:\n    //       \"A request tries to withdraw money from the contract. Requests must be approved by approvers\"\n    //   },\n    //   {\n    //     header: approversCount,\n    //     meta: \"Number of Approvers\",\n    //     description:\n    //       \"Number of people who have already donated to this campaign\"\n    //   },\n    //   {\n    //     header: web3.utils.fromWei(balance, \"ether\"),\n    //     meta: \"Campaign Balance (ether)\",\n    //     description:\n    //       \"The balance is how much money this campaign has left to spend.\"\n    //   }\n    // ];\n\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 10\n    }, this.renderCards()), __jsx(Grid.Column, {\n      width: 6\n    }, __jsx(ContributeForm, {\n      address: this.props.address\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n      href: \"/campaigns/[campaign]/requests\",\n      as: `/campaigns/${this.props.address}/requests`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"View Requests\")))))));\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Button","Layout","Campaign","web3","Link","CampaignShow","getInitialProps","context","campaign","query","summary","methods","getSummary","call","address","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","props","items","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AACnC,eAAaS,eAAb,CAA6BC,OAA7B,EAAsC;AACpC,UAAMC,QAAQ,GAAGN,QAAQ,CAACK,OAAO,CAACE,KAAR,CAAcD,QAAf,CAAzB;AACA,UAAME,OAAO,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AAEA,WAAO;AACLC,MAAAA,OAAO,EAAEP,OAAO,CAACE,KAAR,CAAcD,QADlB;AAELO,MAAAA,mBAAmB,EAAEL,OAAO,CAAC,CAAD,CAFvB;AAGLM,MAAAA,OAAO,EAAEN,OAAO,CAAC,CAAD,CAHX;AAILO,MAAAA,aAAa,EAAEP,OAAO,CAAC,CAAD,CAJjB;AAKLQ,MAAAA,cAAc,EAAER,OAAO,CAAC,CAAD,CALlB;AAMLS,MAAAA,OAAO,EAAET,OAAO,CAAC,CAAD;AANX,KAAP;AAQD;;AAEDU,EAAAA,WAAW,GAAG;AACZ,UAAM;AACJJ,MAAAA,OADI;AAEJG,MAAAA,OAFI;AAGJJ,MAAAA,mBAHI;AAIJE,MAAAA,aAJI;AAKJC,MAAAA;AALI,QAMF,KAAKG,KANT,CADY,CASZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEC;AAAnB,MAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD,QACE,kCADF,EAEE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OAAyB,KAAKH,WAAL,EAAzB,CADF,EAGE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACE,MAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWP;AAApC,MADF,CAHF,CADF,EASE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,IAAD;AACE,MAAA,IAAI,EAAC,gCADP;AAEE,MAAA,EAAE,EAAG,cAAa,KAAKO,KAAL,CAAWP,OAAQ;AAFvC,OAIE,iBACE,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,uBADF,CAJF,CADF,CADF,CATF,CAFF,CADF;AA2BD;;AAzFkC;;AA4FrC,eAAeT,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\n// import ContributeForm from \"../../components/ContributeForm\";\nimport Link from \"next/link\";\n\nclass CampaignShow extends Component {\n  static async getInitialProps(context) {\n    const campaign = Campaign(context.query.campaign);\n    const summary = await campaign.methods.getSummary().call();\n\n    return {\n      address: context.query.campaign,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      approversCount\n    } = this.props;\n\n    // const items = [\n    //   {\n    //     header: manager,\n    //     meta: \"Address of Manager\",\n    //     description:\n    //       \"The manager created this campaign and can create requests to withdraw money\",\n    //     style: { overflowWrap: \"break-word\" }\n    //   },\n    //   {\n    //     header: minimumContribution,\n    //     meta: \"Minimum Contribution (wei)\",\n    //     description:\n    //       \"You must contribute at least this much wei to become an approver\"\n    //   },\n    //   {\n    //     header: requestsCount,\n    //     meta: \"Number of Requests\",\n    //     description:\n    //       \"A request tries to withdraw money from the contract. Requests must be approved by approvers\"\n    //   },\n    //   {\n    //     header: approversCount,\n    //     meta: \"Number of Approvers\",\n    //     description:\n    //       \"Number of people who have already donated to this campaign\"\n    //   },\n    //   {\n    //     header: web3.utils.fromWei(balance, \"ether\"),\n    //     meta: \"Campaign Balance (ether)\",\n    //     description:\n    //       \"The balance is how much money this campaign has left to spend.\"\n    //   }\n    // ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Campaign Show</h3>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n\n            <Grid.Column width={6}>\n              <ContributeForm address={this.props.address} />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column>\n              <Link\n                href=\"/campaigns/[campaign]/requests\"\n                as={`/campaigns/${this.props.address}/requests`}\n              >\n                <a>\n                  <Button primary>View Requests</Button>\n                </a>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}