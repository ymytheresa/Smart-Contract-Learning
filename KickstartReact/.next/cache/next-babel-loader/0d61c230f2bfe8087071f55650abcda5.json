{"ast":null,"code":"var _jsxFileName = \"/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/pages/campaigns/new.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { Router } from 'next/router';\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimumContribution: '',\n      //input is string\n      errorMessage: '',\n      loading: false //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //prevent default behavior <-- submit the data to backend\n\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await factory.methods.createCampaign(this.state.minimumContribution).send({\n          from: accounts[0]\n        });\n        this.setState({\n          loading: false\n        }); //after successful created campaign, redirect to another link, home page\n\n        Router.pushRoute('/');\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n        this.setState({\n          loading: false\n        });\n      }\n    });\n  }\n\n  //error={} <-- expected receiving bool, so we give (false(false(1))) -> will give 1\n  //need <Message> tag here to print the error message \n  //button loading property\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Create new campaign\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"Minimum Contribution\"), __jsx(Input, {\n      label: \"wei\",\n      labelPosition: \"right\",\n      value: this.state.minimumContribution,\n      onChange: event => this.setState({\n        minimumContribution: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Error!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Create!\")));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/pages/campaigns/new.js"],"names":["React","Component","Layout","Form","Button","Input","Message","factory","web3","Router","CampaignNew","minimumContribution","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","createCampaign","state","send","from","pushRoute","error","message","render","onSubmit","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAmC;AAAA;AAAA;;AAAA,mCAGvB;AACJU,MAAAA,mBAAmB,EAAC,EADhB;AACoB;AACxBC,MAAAA,YAAY,EAAC,EAFT;AAGJC,MAAAA,OAAO,EAAE,KAHL,CAGY;;AAHZ,KAHuB;;AAAA,sCAUpB,MAAOC,KAAP,IAAiB;AACxBA,MAAAA,KAAK,CAACC,cAAN,GADwB,CACA;;AACxB,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE,IAAV;AAAgBD,QAAAA,YAAY,EAAC;AAA7B,OAAd;;AACA,UAAI;AACA,cAAMK,QAAQ,GAAG,MAAMT,IAAI,CAACU,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMZ,OAAO,CAACa,OAAR,CACDC,cADC,CACc,KAAKC,KAAL,CAAWX,mBADzB,EAEDY,IAFC,CAEI;AACFC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADZ,SAFJ,CAAN;AAKA,aAAKD,QAAL,CAAc;AAACH,UAAAA,OAAO,EAAE;AAAV,SAAd,EAPA,CASA;;AACAJ,QAAAA,MAAM,CAACgB,SAAP,CAAiB,GAAjB;AACH,OAXD,CAWE,OAAOC,KAAP,EAAc;AACZ,aAAKV,QAAL,CAAc;AAACJ,UAAAA,YAAY,EAAEc,KAAK,CAACC;AAArB,SAAd;AACA,aAAKX,QAAL,CAAc;AAACH,UAAAA,OAAO,EAAE;AAAV,SAAd;AACH;AACJ,KA5B8B;AAAA;;AA8B/B;AACA;AACA;AACAe,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWV,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAC,KADV;AAEI,MAAA,aAAa,EAAC,OAFlB;AAGI,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWX,mBAHtB;AAII,MAAA,QAAQ,EAAEG,KAAK,IACX,KAAKE,QAAL,CAAc;AAACL,QAAAA,mBAAmB,EAAEG,KAAK,CAACgB,MAAN,CAAaC;AAAnC,OAAd,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAYI,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,QAAtB;AAAgC,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWV,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAaI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWT,OAA5B;AAAqC,MAAA,OAAO,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbJ,CAFJ,CADJ;AAoBH;;AAtD8B;;AAyDnC,eAAeH,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { Router } from 'next/router';\n\nclass CampaignNew extends Component{\n\n    //need to update state, why? only updating the state will rerender the components\n    state = {\n        minimumContribution:'', //input is string\n        errorMessage:'',\n        loading: false  //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n    }\n\n    //parathesis is not passed since if passed the function will be triggered once load. reference is passed instead\n    onSubmit = async (event) => {\n        event.preventDefault(); //prevent default behavior <-- submit the data to backend\n        this.setState({loading: true, errorMessage:''});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await factory.methods\n                .createCampaign(this.state.minimumContribution)\n                .send({\n                    from: accounts[0]\n                });\n            this.setState({loading: false});\n\n            //after successful created campaign, redirect to another link, home page\n            Router.pushRoute('/');\n        } catch (error) {\n            this.setState({errorMessage: error.message});\n            this.setState({loading: false});\n        }\n    };\n\n    //error={} <-- expected receiving bool, so we give (false(false(1))) -> will give 1\n    //need <Message> tag here to print the error message \n    //button loading property\n    render() {\n        return (\n            <Layout>\n                <h3>Create new campaign</h3>\n                <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}> \n                    <Form.Field>\n                        <label>Minimum Contribution</label>\n                        <Input \n                            label=\"wei\" \n                            labelPosition=\"right\"\n                            value={this.state.minimumContribution}\n                            onChange={event => \n                                this.setState({minimumContribution: event.target.value})}\n                        />\n                    </Form.Field>\n\n                    <Message error header=\"Error!\"  content={this.state.errorMessage}/>\n                    <Button loading={this.state.loading} primary>Create!</Button>\n                </Form>\n            </Layout>\n        )\n    }\n}\n\nexport default CampaignNew;"]},"metadata":{},"sourceType":"module"}