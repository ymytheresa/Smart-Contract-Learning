{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Link from 'next/link';\nimport Campaign from \"../../ethereum/campaign\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from '../../components/ContributeForm'; //Props is passed from Index.js that Link with query\n//campaign is the address of that campaign\n\nclass CampaignShow extends Component {\n  static async getInitialProps(context) {\n    const campaign = Campaign(context.query.campaign); //this is indeed an object returned, instead of an array !!!\n\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: context.query.campaign,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    //copy the values from props\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      approversCount\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: \"Address of Manager\",\n      description: \"The manager created this campaign and can create requests to withdraw money\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumContribution,\n      meta: \"Minimum Contribution (wei)\",\n      description: \"You must contribute at least this much wei to become an approver\"\n    }, {\n      header: requestsCount,\n      meta: \"Number of Requests\",\n      description: \"A request tries to withdraw money from the contract. Requests must be approved by approvers\"\n    }, {\n      header: approversCount,\n      meta: \"Number of Approvers\",\n      description: \"Number of people who have already donated to this campaign\"\n    }, {\n      header: web3.utils.fromWei(balance, \"ether\"),\n      meta: \"Campaign Balance (ether)\",\n      description: \"The balance is how much money this campaign has left to spend.\"\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Show\"), __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 10\n    }, this.renderCards()), __jsx(Grid.Column, {\n      width: 6\n    }, __jsx(ContributeForm, null))));\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/pages/campaigns/show.js"],"names":["React","Component","Layout","Link","Campaign","Card","Grid","Button","web3","ContributeForm","CampaignShow","getInitialProps","context","campaign","query","summary","methods","getSummary","call","address","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","props","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B,C,CACA;AACA;;AACA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AACjC,eAAaU,eAAb,CAA6BC,OAA7B,EAAsC;AAClC,UAAMC,QAAQ,GAAGT,QAAQ,CAACQ,OAAO,CAACE,KAAR,CAAcD,QAAf,CAAzB,CADkC,CAElC;;AACA,UAAME,OAAO,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AAEA,WAAO;AACHC,MAAAA,OAAO,EAAEP,OAAO,CAACE,KAAR,CAAcD,QADpB;AAEHO,MAAAA,mBAAmB,EAAEL,OAAO,CAAC,CAAD,CAFzB;AAGHM,MAAAA,OAAO,EAAEN,OAAO,CAAC,CAAD,CAHb;AAIHO,MAAAA,aAAa,EAAEP,OAAO,CAAC,CAAD,CAJnB;AAKHQ,MAAAA,cAAc,EAAER,OAAO,CAAC,CAAD,CALpB;AAMHS,MAAAA,OAAO,EAAET,OAAO,CAAC,CAAD;AANb,KAAP;AAQH;;AAEDU,EAAAA,WAAW,GAAG;AACV;AACA,UAAM;AACJJ,MAAAA,OADI;AAEJG,MAAAA,OAFI;AAGJJ,MAAAA,mBAHI;AAIJE,MAAAA,aAJI;AAKJC,MAAAA;AALI,QAMF,KAAKG,KANT;AAQA,UAAMC,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEJ,OADV;AAEEK,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EACT,6EAJJ;AAKEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AALT,KADY,EAQZ;AACEJ,MAAAA,MAAM,EAAER,mBADV;AAEES,MAAAA,IAAI,EAAE,4BAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KARY,EAcZ;AACEF,MAAAA,MAAM,EAAEN,aADV;AAEEO,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KAdY,EAoBZ;AACEF,MAAAA,MAAM,EAAEL,cADV;AAEEM,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KApBY,EA0BZ;AACEF,MAAAA,MAAM,EAAEpB,IAAI,CAACyB,KAAL,CAAWC,OAAX,CAAmBb,OAAnB,EAA4B,OAA5B,CADV;AAEEQ,MAAAA,IAAI,EAAE,0BAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KA1BY,CAAd;AAkCA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB,MAAP;AACD;;AAEHQ,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,MAAD,QACI,yBADJ,EAEI,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACC,KAAKV,WAAL,EADD,CADF,EAKE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACE,MAAC,cAAD,OADF,CALF,CAFJ,CADJ;AAcH;;AA9EgC;;AAiFrC,eAAef,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Link from 'next/link';\nimport Campaign from \"../../ethereum/campaign\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from '../../components/ContributeForm';\n//Props is passed from Index.js that Link with query\n//campaign is the address of that campaign\nclass CampaignShow extends Component {\n    static async getInitialProps(context) {\n        const campaign = Campaign(context.query.campaign);\n        //this is indeed an object returned, instead of an array !!!\n        const summary = await campaign.methods.getSummary().call();\n    \n        return {\n            address: context.query.campaign,\n            minimumContribution: summary[0],\n            balance: summary[1],\n            requestsCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4]\n        };\n    }\n\n    renderCards() {\n        //copy the values from props\n        const {\n          balance,\n          manager,\n          minimumContribution,\n          requestsCount,\n          approversCount\n        } = this.props;\n    \n        const items = [\n          {\n            header: manager,\n            meta: \"Address of Manager\",\n            description:\n              \"The manager created this campaign and can create requests to withdraw money\",\n            style: { overflowWrap: \"break-word\" }\n          },\n          {\n            header: minimumContribution,\n            meta: \"Minimum Contribution (wei)\",\n            description:\n              \"You must contribute at least this much wei to become an approver\"\n          },\n          {\n            header: requestsCount,\n            meta: \"Number of Requests\",\n            description:\n              \"A request tries to withdraw money from the contract. Requests must be approved by approvers\"\n          },\n          {\n            header: approversCount,\n            meta: \"Number of Approvers\",\n            description:\n              \"Number of people who have already donated to this campaign\"\n          },\n          {\n            header: web3.utils.fromWei(balance, \"ether\"),\n            meta: \"Campaign Balance (ether)\",\n            description:\n              \"The balance is how much money this campaign has left to spend.\"\n          }\n        ];\n    \n        return <Card.Group items={items} />;\n      }\n\n    render(){\n        return( \n            <Layout>\n                <h3>Show</h3>\n                <Grid>\n                  <Grid.Column width={10}>\n                  {this.renderCards()}\n                  </Grid.Column>\n\n                  <Grid.Column width={6}>\n                    <ContributeForm/>\n                  </Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}