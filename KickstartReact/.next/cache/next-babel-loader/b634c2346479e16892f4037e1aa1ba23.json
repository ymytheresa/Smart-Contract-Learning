{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, Button } from \"semantic-ui-react\";\nimport Layout from '../components/Layout'; // import Link from '../routes'\n\nimport Link from \"next/link\";\n\nclass CampaignIndex extends Component {\n  // fetching data on next is different. next render the getInitialProps first and provide to the index\n  //CAMPAIGNS itself is a contract, so the return value is a list of addresses\n  static async getInitialProps() {\n    const campaigns = await factory.methods.getDeployedCampaigns().call();\n    return {\n      campaigns\n    };\n  } //fluid : scratch the box max length of the div\n  //Link as, built in properties. Used for dynamic routing\n  //CAMPAIGN (an array of campaign). (an array of address)\n  //campaign is sent to props of Link (address of that campaign)\n\n\n  renderCampaigns() {\n    const items = this.props.campaigns.map(campaign => {\n      return {\n        header: campaign,\n        description: __jsx(Link, {\n          href: {\n            pathname: \"/campaigns/show\",\n            query: {\n              campaign\n            }\n          },\n          passHref: \"true\",\n          as: `/campaigns/${campaign}`\n        }, __jsx(\"a\", null, \"View Campaign\")),\n        fluid: true\n      };\n    }); //without next line wont display anything\n\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Open Campaigns\"), __jsx(Link, {\n      href: \"/campaigns/new\"\n    }, __jsx(\"a\", null, __jsx(Button, {\n      content: \"Create Campaign\",\n      icon: \"add circle\",\n      primary: true,\n      floated: \"right\"\n    }))), this.renderCampaigns()));\n  }\n\n}\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/pages/index.js"],"names":["React","Component","factory","Card","Button","Layout","Link","CampaignIndex","getInitialProps","campaigns","methods","getDeployedCampaigns","call","renderCampaigns","items","props","map","campaign","header","description","pathname","query","fluid","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAClC;AACA;AACA,eAAaO,eAAb,GAA+B;AAC3B,UAAMC,SAAS,GAAG,MAAMP,OAAO,CAACQ,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,EAAxB;AACA,WAAO;AAAEH,MAAAA;AAAF,KAAP;AACH,GANiC,CAQlC;AACA;AACA;AACA;;;AACAI,EAAAA,eAAe,GAAG;AACd,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWN,SAAX,CAAqBO,GAArB,CAAyBC,QAAQ,IAAI;AAC/C,aAAO;AACHC,QAAAA,MAAM,EAAED,QADL;AAEHE,QAAAA,WAAW,EACP,MAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAACC,YAAAA,QAAQ,EAAC,iBAAV;AAA6BC,YAAAA,KAAK,EAAC;AAACJ,cAAAA;AAAD;AAAnC,WAAZ;AAA4D,UAAA,QAAQ,EAAC,MAArE;AAA4E,UAAA,EAAE,EAAG,cAAaA,QAAS;AAAvG,WACI,iCADJ,CAHD;AAOHK,QAAAA,KAAK,EAAE;AAPJ,OAAP;AASH,KAVa,CAAd,CADc,CAYd;;AACA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAER;AAAnB,MAAP;AACH;;AAEDS,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,MAAD,QACI,mBACI,mCADJ,EAEI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACI,iBACI,MAAC,MAAD;AACI,MAAA,OAAO,EAAC,iBADZ;AAEI,MAAA,IAAI,EAAC,YAFT;AAGI,MAAA,OAAO,MAHX;AAII,MAAA,OAAO,EAAC;AAJZ,MADJ,CADJ,CAFJ,EAYK,KAAKV,eAAL,EAZL,CADJ,CADJ;AAkBH;;AA/CiC;;AAkDtC,eAAeN,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, Button } from \"semantic-ui-react\";\nimport Layout from '../components/Layout';\n// import Link from '../routes'\nimport Link from \"next/link\";\n\nclass CampaignIndex extends Component {\n    // fetching data on next is different. next render the getInitialProps first and provide to the index\n    //CAMPAIGNS itself is a contract, so the return value is a list of addresses\n    static async getInitialProps() {\n        const campaigns = await factory.methods.getDeployedCampaigns().call();\n        return { campaigns };\n    }\n\n    //fluid : scratch the box max length of the div\n    //Link as, built in properties. Used for dynamic routing\n    //CAMPAIGN (an array of campaign). (an array of address)\n    //campaign is sent to props of Link (address of that campaign)\n    renderCampaigns() {\n        const items = this.props.campaigns.map(campaign => {\n            return {\n                header: campaign,\n                description: (\n                    <Link href={{pathname:\"/campaigns/show\", query:{campaign}}} passHref='true' as={`/campaigns/${campaign}` }>\n                        <a>View Campaign</a>\n                    </Link>\n                ),\n                fluid: true\n            }; \n        })\n        //without next line wont display anything\n        return <Card.Group items={items} />;\n    }\n\n    render(){\n        return(\n            <Layout>\n                <div>\n                    <h3>Open Campaigns</h3>\n                    <Link href=\"/campaigns/new\">\n                        <a>\n                            <Button \n                                content=\"Create Campaign\" \n                                icon=\"add circle\" \n                                primary\n                                floated=\"right\"\n                            />\n                        </a>    \n                    </Link>\n                    {this.renderCampaigns()}\n                </div>\n            </Layout>\n            );\n    }\n}\n\nexport default CampaignIndex;"]},"metadata":{},"sourceType":"module"}