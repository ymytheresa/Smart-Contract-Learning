{"ast":null,"code":"var _jsxFileName = \"/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/components/ContributeForm.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport Router from 'next/router';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      //input is string\n      errorMessage: '',\n      loading: false //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //props send from show.js <ContributeForm address=xxx>\n\n      const campaign = Campaign(this.props.address);\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, \"ether\")\n        }); //auto refresh after completion\n\n        Router.replace(\"/campaigns/[campaign]\", `/campaigns/${this.props.address}`);\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      ;\n      this.setState({\n        loading: false,\n        value: ''\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Amount\"), __jsx(Input, {\n      value: this.state.value,\n      label: \"ether\",\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })), __jsx(Button, {\n      primary: true,\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Contribute!\"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","web3","Router","ContributeForm","value","errorMessage","loading","event","preventDefault","campaign","props","address","setState","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","replace","error","message","render","onSubmit","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNS,MAAAA,KAAK,EAAC,EADA;AACI;AACVC,MAAAA,YAAY,EAAC,EAFP;AAGNC,MAAAA,OAAO,EAAE,KAHH,CAGU;;AAHV,KAD6B;;AAAA,sCAO1B,MAAMC,KAAN,IAAe;AACxBA,MAAAA,KAAK,CAACC,cAAN,GADwB,CAGxB;;AACA,YAAMC,QAAQ,GAAGT,QAAQ,CAAC,KAAKU,KAAL,CAAWC,OAAZ,CAAzB;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAC;AAAT,OAAd;;AACA,UAAI;AACF,cAAMO,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMN,QAAQ,CAACO,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACvCC,UAAAA,IAAI,EAACN,QAAQ,CAAC,CAAD,CAD0B;AAEvCT,UAAAA,KAAK,EAAEH,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWlB,KAA5B,EAAkC,OAAlC;AAFgC,SAAnC,CAAN,CAFE,CAOF;;AACAF,QAAAA,MAAM,CAACqB,OAAP,CACE,uBADF,EAEG,cAAa,KAAKb,KAAL,CAAWC,OAAQ,EAFnC;AAKD,OAbD,CAaE,OAAOa,KAAP,EAAc;AACd,aAAKZ,QAAL,CAAc;AAACP,UAAAA,YAAY,EAAEmB,KAAK,CAACC;AAArB,SAAd;AACD;;AAAA;AAED,WAAKb,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAC,KAAT;AAAgBF,QAAAA,KAAK,EAAC;AAAtB,OAAd;AACD,KA/BoC;AAAA;;AAiCrCsB,EAAAA,MAAM,GAAE;AACJ,WACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWlB,KADpB;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,aAAa,EAAC,OAHhB;AAIE,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKK,QAAL,CAAc;AAACR,QAAAA,KAAK,EAAEG,KAAK,CAACqB,MAAN,CAAaxB;AAArB,OAAd,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAUE,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWhB,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVF,CADF;AAgBH;;AAlDoC;;AAqDvC,eAAeH,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport Router from 'next/router';\n\nclass ContributeForm extends Component {\n  state = {\n    value:'', //input is string\n    errorMessage:'',\n    loading: false  //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    //props send from show.js <ContributeForm address=xxx>\n    const campaign = Campaign(this.props.address);\n    this.setState({loading:true});\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribute().send({\n        from:accounts[0],\n        value: web3.utils.toWei(this.state.value,\"ether\")\n      });\n\n      //auto refresh after completion\n      Router.replace(\n        \"/campaigns/[campaign]\",\n        `/campaigns/${this.props.address}`\n      );\n      \n    } catch (error) {\n      this.setState({errorMessage: error.message});\n    };\n\n    this.setState({loading:false, value:''})\n  }\n\n  render(){\n      return(\n        <Form onSubmit={this.onSubmit}>\n          <Form.Field>\n            <label>Amount</label>\n            <Input\n              value={this.state.value}\n              label=\"ether\"\n              labelPosition=\"right\"\n              onChange={event => this.setState({value: event.target.value})}\n            />\n          </Form.Field>\n          <Button primary loading={this.state.loading}>\n            Contribute!\n          </Button>\n      </Form>\n      );\n  }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}