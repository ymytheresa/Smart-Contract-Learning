{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\"; // import ContributeForm from \"../../components/ContributeForm\";\n\nimport Link from \"next/link\";\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          manager = _this$props.manager,\n          minimumContribution = _this$props.minimumContribution,\n          requestsCount = _this$props.requestsCount,\n          approversCount = _this$props.approversCount; // const items = [\n      //   {\n      //     header: manager,\n      //     meta: \"Address of Manager\",\n      //     description:\n      //       \"The manager created this campaign and can create requests to withdraw money\",\n      //     style: { overflowWrap: \"break-word\" }\n      //   },\n      //   {\n      //     header: minimumContribution,\n      //     meta: \"Minimum Contribution (wei)\",\n      //     description:\n      //       \"You must contribute at least this much wei to become an approver\"\n      //   },\n      //   {\n      //     header: requestsCount,\n      //     meta: \"Number of Requests\",\n      //     description:\n      //       \"A request tries to withdraw money from the contract. Requests must be approved by approvers\"\n      //   },\n      //   {\n      //     header: approversCount,\n      //     meta: \"Number of Approvers\",\n      //     description:\n      //       \"Number of people who have already donated to this campaign\"\n      //   },\n      //   {\n      //     header: web3.utils.fromWei(balance, \"ether\"),\n      //     meta: \"Campaign Balance (ether)\",\n      //     description:\n      //       \"The balance is how much money this campaign has left to spend.\"\n      //   }\n      // ];\n\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 10\n      }, this.renderCards()), __jsx(Grid.Column, {\n        width: 6\n      }, __jsx(ContributeForm, {\n        address: this.props.address\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n        href: \"/campaigns/[campaign]/requests\",\n        as: \"/campaigns/\".concat(this.props.address, \"/requests\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true\n      }, \"View Requests\")))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(context.query.campaign);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  address: context.query.campaign,\n                  minimumContribution: summary[0],\n                  balance: summary[1],\n                  requestsCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Button","Layout","Campaign","web3","Link","CampaignShow","props","balance","manager","minimumContribution","requestsCount","approversCount","items","renderCards","address","context","campaign","query","methods","getSummary","call","summary"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,Y;;;;;;;;;;;;;kCAeU;AAAA,wBAOR,KAAKC,KAPG;AAAA,UAEVC,OAFU,eAEVA,OAFU;AAAA,UAGVC,OAHU,eAGVA,OAHU;AAAA,UAIVC,mBAJU,eAIVA,mBAJU;AAAA,UAKVC,aALU,eAKVA,aALU;AAAA,UAMVC,cANU,eAMVA,cANU,EASZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEC;AAAnB,QAAP;AACD;;;6BAEQ;AACP,aACE,MAAC,MAAD,QACE,kCADF,EAEE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SAAyB,KAAKC,WAAL,EAAzB,CADF,EAGE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE,MAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ;AAApC,QADF,CAHF,CADF,EASE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,IAAD;AACE,QAAA,IAAI,EAAC,gCADP;AAEE,QAAA,EAAE,uBAAgB,KAAKR,KAAL,CAAWQ,OAA3B;AAFJ,SAIE,iBACE,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,yBADF,CAJF,CADF,CADF,CATF,CAFF,CADF;AA2BD;;;;uGAxF4BC,O;;;;;;AACrBC,gBAAAA,Q,GAAWd,QAAQ,CAACa,OAAO,CAACE,KAAR,CAAcD,QAAf,C;;uBACHA,QAAQ,CAACE,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,E;;;AAAhBC,gBAAAA,O;iDAEC;AACLP,kBAAAA,OAAO,EAAEC,OAAO,CAACE,KAAR,CAAcD,QADlB;AAELP,kBAAAA,mBAAmB,EAAEY,OAAO,CAAC,CAAD,CAFvB;AAGLd,kBAAAA,OAAO,EAAEc,OAAO,CAAC,CAAD,CAHX;AAILX,kBAAAA,aAAa,EAAEW,OAAO,CAAC,CAAD,CAJjB;AAKLV,kBAAAA,cAAc,EAAEU,OAAO,CAAC,CAAD,CALlB;AAMLb,kBAAAA,OAAO,EAAEa,OAAO,CAAC,CAAD;AANX,iB;;;;;;;;;;;;;;;;;;;EALgBxB,S;;AA4F3B,eAAeQ,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\n// import ContributeForm from \"../../components/ContributeForm\";\nimport Link from \"next/link\";\n\nclass CampaignShow extends Component {\n  static async getInitialProps(context) {\n    const campaign = Campaign(context.query.campaign);\n    const summary = await campaign.methods.getSummary().call();\n\n    return {\n      address: context.query.campaign,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      approversCount\n    } = this.props;\n\n    // const items = [\n    //   {\n    //     header: manager,\n    //     meta: \"Address of Manager\",\n    //     description:\n    //       \"The manager created this campaign and can create requests to withdraw money\",\n    //     style: { overflowWrap: \"break-word\" }\n    //   },\n    //   {\n    //     header: minimumContribution,\n    //     meta: \"Minimum Contribution (wei)\",\n    //     description:\n    //       \"You must contribute at least this much wei to become an approver\"\n    //   },\n    //   {\n    //     header: requestsCount,\n    //     meta: \"Number of Requests\",\n    //     description:\n    //       \"A request tries to withdraw money from the contract. Requests must be approved by approvers\"\n    //   },\n    //   {\n    //     header: approversCount,\n    //     meta: \"Number of Approvers\",\n    //     description:\n    //       \"Number of people who have already donated to this campaign\"\n    //   },\n    //   {\n    //     header: web3.utils.fromWei(balance, \"ether\"),\n    //     meta: \"Campaign Balance (ether)\",\n    //     description:\n    //       \"The balance is how much money this campaign has left to spend.\"\n    //   }\n    // ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Campaign Show</h3>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n\n            <Grid.Column width={6}>\n              <ContributeForm address={this.props.address} />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column>\n              <Link\n                href=\"/campaigns/[campaign]/requests\"\n                as={`/campaigns/${this.props.address}/requests`}\n              >\n                <a>\n                  <Button primary>View Requests</Button>\n                </a>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}