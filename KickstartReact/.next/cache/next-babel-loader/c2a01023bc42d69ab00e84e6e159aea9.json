{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Campaign from '../ethereum/campaign';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      //input is string\n      errorMessage: '',\n      loading: false //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //props send from show.js <ContributeForm address=xxx>\n\n      const campaign = Campaign(this.props.address);\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount\"), __jsx(Input, {\n      value: this.state.value,\n      label: \"ether\",\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    })), __jsx(Button, {\n      primary: true\n    }, \"Contribute!\"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Learning/Smart-Contract-Learning/KickstartReact/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","ContributeForm","value","errorMessage","loading","event","preventDefault","campaign","props","address","render","onSubmit","state","setState","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNO,MAAAA,KAAK,EAAC,EADA;AACI;AACVC,MAAAA,YAAY,EAAC,EAFP;AAGNC,MAAAA,OAAO,EAAE,KAHH,CAGU;;AAHV,KAD6B;;AAAA,sCAO1B,MAAMC,KAAN,IAAe;AACxBA,MAAAA,KAAK,CAACC,cAAN,GADwB,CAExB;;AACA,YAAMC,QAAQ,GAAGP,QAAQ,CAAC,KAAKQ,KAAL,CAAWC,OAAZ,CAAzB;AAED,KAZoC;AAAA;;AAcrCC,EAAAA,MAAM,GAAE;AACJ,WACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACE,MAAC,IAAD,CAAM,KAAN,QACE,8BADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWV,KADpB;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,aAAa,EAAC,OAHhB;AAIE,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKQ,QAAL,CAAc;AAACX,QAAAA,KAAK,EAAEG,KAAK,CAACS,MAAN,CAAaZ;AAArB,OAAd;AAJrB,MAFF,CADF,EAUE,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,qBAVF,CADF;AAgBH;;AA/BoC;;AAkCvC,eAAeD,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Campaign from '../ethereum/campaign';\n\nclass ContributeForm extends Component {\n  state = {\n    value:'', //input is string\n    errorMessage:'',\n    loading: false  //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n    //props send from show.js <ContributeForm address=xxx>\n    const campaign = Campaign(this.props.address);\n\n  }\n\n  render(){\n      return(\n        <Form onSubmit={this.onSubmit}>\n          <Form.Field>\n            <label>Amount</label>\n            <Input\n              value={this.state.value}\n              label=\"ether\"\n              labelPosition=\"right\"\n              onChange={event => this.setState({value: event.target.value})}\n            />\n          </Form.Field>\n          <Button primary>\n            Contribute!\n          </Button>\n      </Form>\n      );\n  }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}